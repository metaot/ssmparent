<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">

    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/plugins/**" security="none"/>

    <security:http pattern="/favicon.ico" security="none"></security:http>
    <security:http pattern="/login.jsp" security="none"/>

    <security:http auto-config="true" use-expressions="true">
        <!-- 配置拦截的请求地址，任何请求地址都必须有ROLE_USER的权限 -->
        <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <security:form-login authentication-failure-url="/login.jsp"
                             login-page="/login.jsp"
                             login-processing-url="/login"
                             default-target-url="/index.jsp"/>
        <security:access-denied-handler error-page="/403.jsp"></security:access-denied-handler>
        <!-- 关闭跨越请求 -->
        <security:csrf disabled="true"/>
        <!-- 退出 -->
        <security:logout invalidate-session="true" logout-url="/logout" logout-success-url="/login.jsp"/>
    </security:http>
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userServiceImpl">
            <!--下面的语句在用不加密的密码登录创建有加密密码的用户后再解开-->
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>
            <!--<security:user-service>-->
                <!--<security:user name="admin" password="{noop}admin" authorities="ROLE_USER"/>-->
            <!--</security:user-service>-->
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
    </bean>

    <security:global-method-security secured-annotations="enabled"></security:global-method-security>
</beans>
